{"ast":null,"code":"var _jsxFileName = \"/Users/shichulisha/china_glaze/src/Body.js\";\nimport React from 'react';\nconst QUESTIONS_JSON = `[\n    {\n      \"id\": 1,\n      \"text\": \"注文してからどのくらいで届きますか？\",\n      \"answer\": \"15時までのご注文で当日配送いたしますので、最短で翌日にお届けとなります。また、発送が完了しだい追跡番号をお知らせいたしますので、発送後の配達状況をお調べいただくことができます。\"\n    },\n    {\n      \"id\": 2,\n      \"text\": \"配送業者を指定できますか？\",\n      \"answer\": \"しろねこメイル便でのお届けとなります。他の配送業者様や配送方法をご指定いただくことはできません。\"\n    },\n    {\n      \"id\": 3,\n      \"text\": \"送料はかかりますか？\",\n      \"answer\": \"このページからのご注文に限り、送料無料でお届けいたします！キャンペーンコードの入力が必要となりますので、入力漏れがないかお確かめください。\"\n    },\n    {\n      \"id\": 4,\n      \"text\": \"返品は可能ですか？\",\n      \"answer\": \"大変申し訳ございませんが、返品は承っておりません。ただし、発送の際に商品チェックを実施しておりますが、万が一ご注文いただいた商品と異なっていたり、破損や不具合などが見つかりました場合は、返品・交換対応をさせていただきます。\"\n    }\n  ]`; //   一つの質問とその回答を表示するdivを子コンポネントにする\n\nconst Question = ({\n  text,\n  answer,\n  isOpen,\n  onClick\n}) => React.createElement(\"div\", {\n  class: \"q-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, text, isOpen && React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, answer))));\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.questions = JSON.parse(QUESTIONS_JSON); //   回答が表示されている質問のidを配列でもてるようにする\n\n    this.state = {\n      openIds: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(id) {\n    // 分割代入\n    let openIds = this.state.openIds;\n    openIds = openIds.includes(id) ? openIds.filter(e => e !== id) : [...openIds, id];\n    this.setState({\n      openIds\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"q-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u3054\\u6CE8\\u6587\\u306B\\u969B\\u3057\\u3066\\u3088\\u304F\\u3042\\u308B\\u3054\\u8CEA\\u554F\")), React.createElement(\"div\", {\n      class: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.questions.map(q => React.createElement(Question, {\n      key: q.id,\n      text: q.text,\n      answer: q.answer,\n      onClick: () => {\n        this.handleClick(q.id);\n      },\n      isOpen: this.state.openIds.includes(q.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/shichulisha/china_glaze/src/Body.js"],"names":["React","QUESTIONS_JSON","Question","text","answer","isOpen","onClick","Body","Component","constructor","props","questions","JSON","parse","state","openIds","handleClick","bind","id","includes","filter","e","setState","render","map","q"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAI;;;;;;;;;;;;;;;;;;;;;IAAxB,C,CAuBA;;AACE,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,MAAP;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KACf;AAAK,EAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAO,EAAA,OAAO,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIH,IAAJ,EACIE,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,MAAJ,CADd,CADJ,CADJ,CADF;;AAUA,MAAMG,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBC,IAAI,CAACC,KAAL,CAAWZ,cAAX,CAAjB,CAFc,CAGhB;;AACE,SAAKa,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACDD,EAAAA,WAAW,CAACE,EAAD,EAAI;AACb;AADa,QAERH,OAFQ,GAEG,KAAKD,KAFR,CAERC,OAFQ;AAGbA,IAAAA,OAAO,GAAGA,OAAO,CAACI,QAAR,CAAiBD,EAAjB,IAAuBH,OAAO,CAACK,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAKH,EAA1B,CAAvB,GAAuD,CAAC,GAAGH,OAAJ,EAAaG,EAAb,CAAjE;AACA,SAAKI,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACD;;AACDQ,EAAAA,MAAM,GAAE;AACJ,WACE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FADJ,CADJ,EAII;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,SAAL,CAAea,GAAf,CAAmBC,CAAC,IACjB,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,CAAC,CAACP,EADX;AAEI,MAAA,IAAI,EAAEO,CAAC,CAACtB,IAFZ;AAGI,MAAA,MAAM,EAAEsB,CAAC,CAACrB,MAHd;AAII,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKY,WAAL,CAAiBS,CAAC,CAACP,EAAnB;AAAyB,OAJ9C;AAKI,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI,QAAnB,CAA4BM,CAAC,CAACP,EAA9B,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADH,CAJJ,CADF;AAkBH;;AAnC8B;;AAsCrC,eAAeX,IAAf","sourcesContent":["import React from 'react';\n\nconst QUESTIONS_JSON = `[\n    {\n      \"id\": 1,\n      \"text\": \"注文してからどのくらいで届きますか？\",\n      \"answer\": \"15時までのご注文で当日配送いたしますので、最短で翌日にお届けとなります。また、発送が完了しだい追跡番号をお知らせいたしますので、発送後の配達状況をお調べいただくことができます。\"\n    },\n    {\n      \"id\": 2,\n      \"text\": \"配送業者を指定できますか？\",\n      \"answer\": \"しろねこメイル便でのお届けとなります。他の配送業者様や配送方法をご指定いただくことはできません。\"\n    },\n    {\n      \"id\": 3,\n      \"text\": \"送料はかかりますか？\",\n      \"answer\": \"このページからのご注文に限り、送料無料でお届けいたします！キャンペーンコードの入力が必要となりますので、入力漏れがないかお確かめください。\"\n    },\n    {\n      \"id\": 4,\n      \"text\": \"返品は可能ですか？\",\n      \"answer\": \"大変申し訳ございませんが、返品は承っておりません。ただし、発送の際に商品チェックを実施しておりますが、万が一ご注文いただいた商品と異なっていたり、破損や不具合などが見つかりました場合は、返品・交換対応をさせていただきます。\"\n    }\n  ]`;\n\n//   一つの質問とその回答を表示するdivを子コンポネントにする\n  const Question = ({text, answer, isOpen, onClick}) => (\n    <div class=\"q-title\">\n        <label onClick={onClick}>\n            <p>{text}\n               {isOpen && <p>{answer}</p>}\n            </p>\n        </label>\n    </div>\n  )\n\n  class Body extends React.Component {\n      constructor(props){\n          super(props);\n          this.questions = JSON.parse(QUESTIONS_JSON);\n        //   回答が表示されている質問のidを配列でもてるようにする\n          this.state = {\n            openIds: []\n          }\n          this.handleClick = this.handleClick.bind(this);\n      }\n      handleClick(id){\n        // 分割代入\n        let {openIds} = this.state;\n        openIds = openIds.includes(id) ? openIds.filter(e => e !== id) : [...openIds, id];\n        this.setState({ openIds });\n      }\n      render(){\n          return(\n            <div class=\"q-container\">\n                <div class=\"question\">\n                    <p>ご注文に際してよくあるご質問</p>\n                </div>\n                <div class=\"answer\">\n                  {this.questions.map(q => (\n                      <Question\n                          key={q.id}\n                          text={q.text}\n                          answer={q.answer}\n                          onClick={() => { this.handleClick(q.id); }}\n                          isOpen={this.state.openIds.includes(q.id)}\n                      />\n                  ))}\n                </div>\n            </div>\n          );\n      }\n  }\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}